############################################################
#
# 用户微服务
# web访问端口号  约定：8003
#
############################################################
server:
  port: 8001
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1  # tomcat默认大小2M，超过2M的文件不会被捕获，需要调整此处大小为100MB或者-1即可

############################################################
#
# 配置项目信息
#
############################################################
spring:
  application:
    name: service-article
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  rabbitmq:
      host: 192.168.93.129
      port: 5672
      username: admin
      password: admin
      virtual-host: imooc-news-dev
  cloud:
      stream:
        bindings:                           # 绑定通道和交换机
          myOutput:                         # 定义生产者的通道
            # 自定义交换机的名字，也就是代码里构建的消息，交给底层mq的交换机
            destination: streamExchange
          myInput:                          # 定义消费者的通道
            # 自定义交换机的名字，也就是消息从底层mq输入到消费端进行消费
            destination: streamExchange
  zipkin:
      # 配置zipkin采集的服务地址，数据会发送到这里
      base-url: http://192.168.93.129:9411/
      sender:
        # 数据采集的传输通信方式，web http的形式
        type: web
    sleuth:
      sampler:
        # 数据采样比例（百分数），0~1
        probability: 1

############################################################
#
# eureka client配置信息
#
############################################################
eureka:
  server:
    hostname: eureka
    port: 7000
  client:
    service-url:
#      defaultZone: http://${eureka.server.hostname}:${eureka.server.port}/eureka/
      defaultZone: http://eureka-cluster-7001:7001/eureka/,http://eureka-cluster-7002:7002/eureka/,http://eureka-cluster-7003:7003/eureka/
  instance:
      lease-renewal-interval-in-seconds: 3      # 调整微服务（eureka client）和注册中心（eureka server）的心跳时间
      lease-expiration-duration-in-seconds: 5   # eureka 举例最近的一次心跳等待提出的时间，默认90s

ribbon:
  ConnectTimeout: 5000          # 创建连接的超时时间，单位：ms
  ReadTimeout: 5000             # 在连接创建好以后，调用接口的超时时间，单位：ms
  MaxAutoRetries: 3           # 最大重试次数
  MaxAutoRetriesNextServer: 2   # 切换到下个微服务实例的重试次数
  # 当请求到某个微服务5s，超时后会进行重试，先重试连接自己当前的这个实例
  # 如果当前重试失败1次，则会切换到访问集群中的下一个微服务实例，切换最大为2次

logging:
  level:
      com.imooc.api.controller.user.UserControllerApi: debug
#    root: debug


# 配置feign
feign:
  client:
    config:
      service-user:
        loggerLevel: FULL
  hystrix:
    enabled: true